!function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}var _servicesMapServiceJs=require("./services/mapService.js"),_servicesMapServiceJs2=_interopRequireDefault(_servicesMapServiceJs);$(document).ready(function(){_servicesMapServiceJs2["default"].initializeMapsByDataMapAttribute()})},{"./services/mapService.js":2}],2:[function(require,module,exports){"use strict";var createMap=function(options){var optionsDefault={zoom:10,maxZoom:18,minZoom:null,zoomControl:!1,boxZoom:!1,touchZoom:!1,center:null,attributionControl:!1,dragging:!1,scrollWheelZoom:!1,doubleClickZoom:!1,tap:!1,keyboard:!1,tilesLayer:!1};options=$.extend({},optionsDefault,options);var map=L.map(options.element,{zoom:options.zoom,maxZoom:options.maxZoom,minZoom:options.minZoom,zoomControl:options.zoomControl,boxZoom:options.boxZoom,touchZoom:options.touchZoom,center:options.center,attributionControl:options.attributionControl,dragging:options.dragging,scrollWheelZoom:options.scrollWheelZoom,doubleClickZoom:options.doubleClickZoom,tap:options.tap,keyboard:options.keyboard});return options.fitBounds&&map.fitBounds(options.fitBounds),options.zoomControl&&map.zoomControl.setPosition("bottomright"),options.tilesLayer?options.tilesLayer.addTo(map):getEvaneosTilesLayer().addTo(map),map},getEvaneosTilesLayer=function(maxZoom){maxZoom=maxZoom?maxZoom:18;var lang=$("html").attr("lang"),tileMapId=void 0;return tileMapId="fr"==lang?"evaneos.2ee9ae64":"de"==lang?"evaneos.6e29799c":"es"==lang?"evaneos.76966c64":"evaneos.6e8e638d",L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}",{maxZoom:maxZoom,id:tileMapId,accessToken:"pk.eyJ1IjoiZXZhbmVvcyIsImEiOiJJXzI5Wk44In0.F89eu9UbZzlPMAcfBDB6Tg"})},stageLayer="undefined"==typeof L?{}:L.Layer.extend({options:{pane:"markerPane"},initialize:function(latlng,options){L.setOptions(this,options),this._latlng=latlng},onAdd:function(map){map.on("zoomanim",this._animateZoom,this),this._initMarker(),this.update()},onRemove:function(map){map.off("zoomanim",this._animateZoom,this),L.DomUtil.remove(this._marker),this.removeInteractiveTarget(this._marker),this._marker=null},getEvents:function(){return{zoom:this.update,viewreset:this.update}},getLatLng:function(){return this._latlng},_initMarker:function(){var that=this,marker=L.DomUtil.create("div");marker.classList.add(this.options.markerClass?this.options.markerClass:"map-service-stage-marker"),marker.classList.add("leaflet-marker-pane"),marker.classList.add("leaflet-zoom-animated"),this._marker=marker,this.getPane().appendChild(this._marker),this.options.title&&(L.DomEvent.on(marker,"mouseenter",this._openTooltip,this),L.DomEvent.on(marker,"mouseleave",this._closeTooltip,this)),L.DomEvent.on(this._marker,"click",function(){that.options.onMarkerClicked&&that.options.onMarkerClicked(that)},this)},update:function(){if(this._marker){var pos=this._map.latLngToLayerPoint(this._latlng).round();this._setPos(pos)}return this},_setPos:function(pos){L.DomUtil.setPosition(this._marker,pos)},_animateZoom:function(opt){var pos=this._map._latLngToNewLayerPoint(this._latlng,opt.zoom,opt.center).round();this._setPos(pos)},_openTooltip:function(){if(!this._tooltip){this._updateZIndex(2e3),this._tooltip=L.DomUtil.create("div","map-service-tooltip",this._marker);var titleElement=L.DomUtil.create("div","map-service-tooltip-title",this._tooltip);titleElement.innerHTML=this.options.title}},_closeTooltip:function(){this._updateZIndex("auto"),this._marker.removeChild(this._tooltip),this._tooltip=null},_updateZIndex:function(zIndex){this._marker.style.zIndex=zIndex}}),createStagesLayerFromGeoJson=function(geoJson,stagesLayerOptions){return L.geoJson(geoJson,{pointToLayer:function(geoJsonPoint,latlng){var options=Object.assign({},geoJsonPoint.properties,stagesLayerOptions);return new stageLayer(latlng,options)}})},initializeMapsByDataMapAttribute=function(){for(var mapsElms=document.querySelectorAll("[data-map-type]"),index=0;index<mapsElms.length;index++){{var mapElm=mapsElms[index],mapType=mapElm.getAttribute("data-map-type"),mapStatus=mapElm.getAttribute("data-map-status"),geoJsonString=mapElm.getAttribute("data-geojson");mapElm.getAttribute("data-bounding-box")}if(!geoJsonString)return;var geoJson=geoJsonString?JSON.parse(geoJsonString):null;if("loaded"==mapStatus)return;if(mapElm.setAttribute("data-map-status","loaded"),"itinerary-card"==mapType){var map=createMap({element:mapElm}),stagesLayer=createStagesLayerFromGeoJson(geoJson).addTo(map);map.fitBounds(stagesLayer.getBounds())}else if("stage-card"==mapType){var map=createMap({element:mapElm,maxZoom:8}),stagesLayer=createStagesLayerFromGeoJson(geoJson).addTo(map);map.fitBounds(stagesLayer.getBounds())}}};module.exports={createMap:createMap,stageLayer:stageLayer,getEvaneosTilesLayer:getEvaneosTilesLayer,createStagesLayerFromGeoJson:createStagesLayerFromGeoJson,initializeMapsByDataMapAttribute:initializeMapsByDataMapAttribute}},{}]},{},[1]);